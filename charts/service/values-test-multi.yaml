name: service-template
environments:
- env:
    TEST_ENV: Example env var
    A_SECRET_VALUE: 
      fromSecret:
        name: staging--secret--value
        version: "1"
    ANOTHER_SECRET_VALUE: 
      fromSecret:
        name: very--secret
        version: latest
  metrics:
    enabled: true
    interval: 10s
  minReplicas: 1
  maxReplicas: 5
  terminationGracePeriodSeconds: 600
  port: 3000
  production: true
  customDomains:
  - api.getcircuit.com
  - api-test.getcircuit.com
  customMatch:
  - uri:
      prefix: "/rest"
  - uri:
      prefix: "/health"
  version: v0.0.2
  targetCPU: 80
  auth:
    issuers:
      - iss: testing@secure.istio.io
        jwksUri: https://raw.githubusercontent.com/istio/istio/release-1.16/security/tools/jwt/samples/jwks.json
    allowPaths:
    - '/metrics'
  public: true
  volumes:
    secrets:
    - name: firestore-service-accounts
      path: /etc/secrets
      items: 
        - key: "api.json"
          path: "api.json"
        - key: "consumer.json"
          path: "consumer.json"
        - key: "dev.json"
          path: "dev.json"
        - key: "teams.json"
          path: "teams.json"
        - key: "test.json"
          path: "test.json"
    - fromRemote: 
          name: mounted--secret
          version: 1
      path: /etc/secret
      file: 'asdf.json'
      name: mounted-secret-name
  rolloutAnalysis:
    successCondition: 0.99
  clusterAuth:
    routes:
      - paths:
          - /
          - /hello-world
        methods:
          - POST
        services:
          - 'hello-world-service'
  customRoute:
  - name: route-to-ms
    match:
    - uri:
        prefix: "/my-ms"
    route:
    - destination:
        host: my-ms
  healthcheck:
    enabled: true
    liveness:
      path: /health
      delay: 20
      interval: 10
      failure: 3
      timeout: 30
    readiness:
      path: /health
      delay: 10
      interval: 10
      failure: 3
      timeout: 30
      success: 3
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits: 
      cpu: 1
      memory: 1Gi
- env:
    TEST_ENV: Staging env var
  metrics:
    enabled: true
    interval: 60s
  minReplicas: 1
  maxReplicas: 5
  port: 3000
  production: false
  auth:
    issuers:
      - iss: testing@secure.istio.io
        jwksUri: https://raw.githubusercontent.com/istio/istio/release-1.16/security/tools/jwt/samples/jwks.json
  name: staging
  gcpServiceAccount: "suchGcpServiceAccount@veryemail.com"
  imagePullPolicy: Always
  command: ["my", "custom", "command"]
  version: v0.0.2
  targetCPU: 95
  public: true
  volumes:
    secrets:
    - name: firestore-service-accounts
      path: /etc/secrets
      items: 
        - key: "api.json"
          path: "api.json"
        - key: "consumer.json"
          path: "consumer.json"
        - key: "dev.json"
          path: "dev.json"
        - key: "teams.json"
          path: "teams.json"
        - key: "test.json"
          path: "test.json"
  resources:
    requests:
      cpu: 200m
      memory: 64Mi
    limits: 
      cpu: 500m
      memory: 256Mi
- env:
    TEST_ENV: Production env var
  metrics:
    enabled: true
    interval: 60s
  gcpServiceAccount: "suchGcpServiceAccountProd@veryemail.com"
  minReplicas: 1
  maxReplicas: 5
  port: 3000
  production: true
  name: another_production
  command: ["my", "custom", "command"]
  version: v0.0.2
  targetCPU: 95
  public: true
  volumes:
    secrets:
    - name: firestore-service-accounts
      path: /etc/secrets
      items: 
        - key: "api.json"
          path: "api.json"
        - key: "consumer.json"
          path: "consumer.json"
        - key: "dev.json"
          path: "dev.json"
        - key: "teams.json"
          path: "teams.json"
        - key: "test.json"
          path: "test.json"
  rolloutAnalysis:
    custom:
    - name: my-custom-metric
      successCondition: "result[0] >= 0.99"
      query: |
        sum(irate(
          http_requests_total{service="service-canary", status!~"5.*"}[2m]
        )) / 
        sum(irate(
          http_requests_total{service="service-canary"}[2m]
        ))
    - name: another-metric
      successCondition: "result[0] >= 0.999"
      query: |
        sum(irate(
          http_requests_total{service="service-canary", path="bleh", status!~"5.*"}[2m]
        )) / 
        sum(irate(
          http_requests_total{service="service-canary", path="bleh"}[2m]
        ))
  clusterAuth:
    routes:
      - paths:
          - /
        services:
          - 'a-service'
  resources:
    requests:
      cpu: 200m
      memory: 64Mi
    limits: 
      cpu: 500m
      memory: 256Mi
