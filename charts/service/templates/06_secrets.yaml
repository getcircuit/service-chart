{{ $namespace := .Values.namespace | default "apps" }}

{{- range $k, $environment := .Values.environments }}

{{ $secretName := printf "%s--%s" $environment.name $.Values.name }}
{{ if $environment.production }}
  {{ $secretName = $.Values.name }}
{{- end }}

{{ $shouldRender := false }}
{{- range $key, $value := $environment.env}}
  {{- if regexMatch "^\\s*\\$\\{gcp:.*/[0-9]*\\}$" $value }}
    {{ $shouldRender = true }}
  {{end}}
{{end}}
{{- if $environment.volumes }}
{{- if $environment.volumes.secrets }}
  {{- range $j, $value := $environment.volumes.secrets }}
    {{- if kindIs "string" $value.from }}
    {{- if regexMatch "^\\s*\\$\\{gcp:.*/[0-9]*\\}$" $value.from }}
      {{ $shouldRender = true }}
    {{end}}
    {{end}}
  {{end}}
{{end}}
{{end}}

{{- if $shouldRender }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $secretName }}
  namespace: {{ $namespace }}
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: cluster-gcpsm-secret-store
  target: {}
  data:
  {{- range $key, $value := $environment.env}}
    {{- if regexMatch "^\\s*\\$\\{gcp:.*/[0-9]*\\}$" $value }}
    {{ $keyInfo := trim $value | trimPrefix "${gcp:" | trimSuffix "}" | splitList "/" }}
  - secretKey: {{ printf "%s-%s" $key (join "-version-env-" $keyInfo) }}
    remoteRef: 
      key: {{ index $keyInfo 0 }}
      version: {{ index $keyInfo 1 }}
    {{- end }}
  {{- end }}

  {{- if $environment.volumes }}
  {{- if $environment.volumes.secrets }}
  {{- range $j, $value := $environment.volumes.secrets }}
    {{- if kindIs "string" $value.from }}
    {{- if regexMatch "^\\s*\\$\\{gcp:.*/[0-9]*\\}$" $value.from }}
    {{ $keyInfo := trim $value.from | trimPrefix "${gcp:" | trimSuffix "}" | splitList "/" }}
  - secretKey: {{ printf "%s-%s" $value.name (join "-version-mount-" $keyInfo) }}
    remoteRef: 
      key: {{ index $keyInfo 0 }}
      version: {{ index $keyInfo 1 }}
    {{- end }}
    {{- end}}
  {{- end }}
  {{- end }}
  {{- end }}
---
{{- end }}
{{- end }}
